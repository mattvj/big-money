{"version":3,"sources":["../../src/bigmoney.js"],"names":["extraCurrencies","BigMoney","intAmount","currency","getCurrency","amount","Object","freeze","prototype","add","value","valueNumber","parse","checkValues","Error","subtract","sub","multiply","power","pow","decimal_digits","div","mul","divide","compare","cmp","getCurrencyCode","code","getAmount","toFixed","toString","round","ROUND_HALF_EVEN","toDecimal","toCurrencyString","toLocaleString","locale","style","localeCode","toMinimalString","addCurrency","currencyCode","assign","decimal","indexOf","stringParts","split","toUpperCase","val1","val2"],"mappings":"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","file":"bigmoney.js","sourcesContent":["import currencies from './currency';\nimport Big from 'big.js';\n\nconst extraCurrencies = {};\n\nfunction BigMoney(intAmount, currency) {\n    if(typeof currency === 'string') {\n      currency = BigMoney.getCurrency(currency);\n    }\n\n    this.amount = Big(intAmount);\n    this.currency = currency;\n    Object.freeze(this);\n}\n\nBigMoney.prototype.add = function(value, currency = this.currency) {\n  const valueNumber = value instanceof BigMoney ? value : BigMoney.parse(value, currency);\n\n  if(!checkValues(valueNumber, this)) {\n    throw new Error('Invalid Number');\n  }\n\n  return new BigMoney(this.amount.add(valueNumber.amount), this.currency);\n};\n\nBigMoney.prototype.subtract = function(value, currency = this.currency) {\n  const valueNumber = value instanceof BigMoney ? value : BigMoney.parse(value, currency);\n\n  if(!checkValues(valueNumber, this)) {\n    throw new Error('Invalid Number');\n  }\n\n  return new BigMoney(this.amount.sub(valueNumber.amount), this.currency);\n};\n\nBigMoney.prototype.multiply = function(value, currency = this.currency) {\n  const valueNumber = value instanceof BigMoney ? value : BigMoney.parse(value, currency);\n\n  if(!checkValues(valueNumber, this)) {\n    throw new Error('Invalid Number');\n  }\n\n  const power = Big(10).pow(this.currency.decimal_digits);\n  const amount = valueNumber.amount.div(power);\n\n  return new BigMoney(this.amount.mul(amount), this.currency);\n};\n\nBigMoney.prototype.divide = function(value, currency = this.currency) {\n  const valueNumber = value instanceof BigMoney ? value : BigMoney.parse(value, currency);\n\n  if(!checkValues(valueNumber, this)) {\n    throw new Error('Invalid Number');\n  }\n\n  const power = Big(10).pow(this.currency.decimal_digits);\n  const amount = valueNumber.amount.div(power);\n\n  return new BigMoney(this.amount.div(amount), this.currency);\n};\n\nBigMoney.prototype.compare = function(value, currency = this.currency) {\n  const valueNumber = value instanceof BigMoney ? value : BigMoney.parse(value, currency);\n\n  if(!checkValues(valueNumber, this)) {\n    throw new Error('Invalid Number');\n  }\n\n  return this.amount.cmp(valueNumber.amount);\n};\n\nBigMoney.prototype.getCurrencyCode = function() {\n  return this.currency.code;\n};\n\nBigMoney.prototype.getAmount = function() {\n  return +this.amount.toFixed(0);\n};\n\nBigMoney.prototype.toString = function() {\n  const power = Big(10).pow(this.currency.decimal_digits);\n  let amount = this.amount.div(power);\n  return amount.round(this.currency.decimal_digits, Big.ROUND_HALF_EVEN).toFixed(this.currency.decimal_digits);\n};\n\nBigMoney.prototype.toDecimal = function() {\n  return +this.toString();\n};\n\nBigMoney.prototype.toCurrencyString = function() {\n  return this.toString() + \" \" + this.currency.code;\n};\n\nBigMoney.prototype.toLocaleString = function(locale = 'en-US') {\n  return this.toDecimal().toLocaleString(locale, { style: 'currency', currency: this.currency.localeCode || this.currency.code });\n};\n\nBigMoney.prototype.toMinimalString = function() {\n  const power = Big(10).pow(this.currency.decimal_digits);\n  let amount = this.amount.div(power);\n  return amount.round(this.currency.decimal_digits, Big.ROUND_HALF_EVEN).toString();\n};\n\nBigMoney.addCurrency = function(currency) {\n  extraCurrencies[currency.code] = currency;\n};\n\nBigMoney.getCurrency = function(currencyCode) {\n  return Object.assign({}, currencies, extraCurrencies)[currencyCode];\n};\n\nBigMoney.parse = function(decimal, currency) {\n  if (typeof decimal === 'string' && decimal.indexOf(' ') > 0) {\n    const stringParts = decimal.split(' ');\n    decimal = stringParts[0];\n    currency = stringParts[1].toUpperCase();\n  }\n\n  if (typeof currency === 'string') {\n    currency = BigMoney.getCurrency(currency);\n  }\n\n  if (!currency) {\n    throw new Error('Invalid currency');\n  }\n\n  let amount = Big(decimal);\n  const power = Big(10).pow(currency.decimal_digits);\n  amount = amount.mul(power);\n  amount = amount.round(0, Big.ROUND_HALF_EVEN);\n\n  return new BigMoney(amount, currency);\n};\n\nconst checkValues = function(val1, val2) {\n  if(val1.getCurrencyCode() !== val2.getCurrencyCode()) {\n    throw new Error('Currencies don\\'t match [' + val1.getCurrencyCode() + '] [' + val2.getCurrencyCode() + ']');\n  }\n\n  return true;\n};\n\nexport default BigMoney;\n"]}